from TestCase import TestCase
from mll.LSTMPredictor import LSTMPredictor


class LSTMPredictorTest(TestCase):

    def test_oil_collapse_prediction(self):
        df = self.get_test_data('Crude_Oil_20200616.csv', index_col='Date')
        train_split = 6542 #int(len(df) * .7)
        predictor = LSTMPredictor(df, 'CL3', train_split=train_split, past_history=720, future_target=72, seed=13)
        multi_step_model = predictor.multi_step_model
        predictor.multi_step_history # force to train

        """
        See OilCollapsePrediction.png. The predicted value is very different from real.
        """
        expected = [[3.5937686, 3.720614, 3.672339, 3.7382755, 3.7367423, 3.7359233, 3.8337355, 3.8427014, 3.9389718, 3.9446461, 3.86235, 3.9372716, 3.9875588, 3.9489331, 4.015266, 3.9504056, 4.0405016, 4.050058, 4.1930437, 4.134981, 4.1116424, 4.10374, 4.149703, 4.2924466, 4.1787944, 4.248641, 4.3588495, 4.3000584, 4.3288083, 4.3341055, 4.3335814, 4.3983946, 4.4265, 4.376779, 4.4519215, 4.4655395, 4.4248066, 4.503516, 4.549165, 4.4975905, 4.63985, 4.586208, 4.598851, 4.6475425, 4.6849294, 4.6769037, 4.6691046, 4.780403, 4.661655, 4.7837224, 4.736267, 4.863074, 4.7888947, 4.796855, 4.8849382, 4.7718463, 4.8133893, 4.8543286, 4.703912, 4.7739162, 4.808079, 4.838688, 4.791313, 4.797518, 4.859649, 4.794797, 4.696569, 4.8137565, 4.9018006, 4.809297, 4.892603, 4.8581433],
                    [2.778731, 2.6117043, 2.9024286, 2.8850284, 2.6114736, 2.6882973, 2.8820505, 2.8055592, 2.971461, 2.6235037, 2.849221, 2.8261313, 2.82072, 2.9902997, 3.015302, 3.0738964, 3.0696306, 3.207372, 2.898681, 3.3886497, 3.1920943, 3.205781, 3.4386423, 2.7878385, 3.346573, 3.1373177, 3.1696057, 3.492258, 3.193901, 3.3254213, 3.6506581, 3.4181607, 3.3335814, 3.3480062, 3.7530801, 3.5741155, 3.6034787, 3.793337, 3.2592478, 3.4469643, 3.5764992, 3.6975183, 3.5160172, 3.8074691, 3.946424, 3.4209757, 3.560112, 3.527236, 3.8157907, 3.8829093, 3.9430192, 3.964687, 4.072547, 4.01853, 3.5897462, 4.097936, 3.6030111, 3.8467178, 3.9018874, 3.4967468, 3.6447706, 3.7612548, 4.291164, 3.8534343, 3.798473, 3.7773044, 3.7928865, 3.5009656, 3.653718, 3.704471, 3.817394, 3.7735987]]
        self.assert_dataset(expected, predictor.validation_dataset, lambda x, y: multi_step_model.predict(x)[0])

